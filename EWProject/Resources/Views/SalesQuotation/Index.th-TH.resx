<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ADDRESS" xml:space="preserve">
    <value>ที่อยู่</value>
  </data>
  <data name="ATTN" xml:space="preserve">
    <value>เรียน</value>
  </data>
  <data name="COMMODITY TYPE" xml:space="preserve">
    <value>ประเภทสินค้า</value>
  </data>
  <data name="Confirm Transaction" xml:space="preserve">
    <value>ยืนยันการทำธุรกรรม</value>
  </data>
  <data name="CREDIT TERM" xml:space="preserve">
    <value>ระยะเครดิต</value>
  </data>
  <data name="CURRENCY TYPE" xml:space="preserve">
    <value>ประเภทสกุลเงิน</value>
  </data>
  <data name="CUSTOMER NAME" xml:space="preserve">
    <value>ชื่อลูกค้า</value>
  </data>
  <data name="CUSTOMER TYPE" xml:space="preserve">
    <value>ประเภทลูกค้า</value>
  </data>
  <data name="Dangerous Goods" xml:space="preserve">
    <value>สินค้าอันตราย</value>
  </data>
  <data name="DATE" xml:space="preserve">
    <value>วันที่</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>ลบ</value>
  </data>
  <data name="DESTINATION" xml:space="preserve">
    <value>ปลายทาง</value>
  </data>
  <data name="EMAIL" xml:space="preserve">
    <value>อีเมล</value>
  </data>
  <data name="Existing Customer" xml:space="preserve">
    <value>ลูกค้าปัจจุบัน</value>
  </data>
  <data name="FIRST NAME" xml:space="preserve">
    <value>ชื่อจริง</value>
  </data>
  <data name="HEADER SALESQUOTATION" xml:space="preserve">
    <value>ใบเสนอราคาการขายส่วนหัว</value>
  </data>
  <data name="Item Code" xml:space="preserve">
    <value>รหัสสินค้า</value>
  </data>
  <data name="Item Name" xml:space="preserve">
    <value>ชื่อรายการ</value>
  </data>
  <data name="LAST NAME" xml:space="preserve">
    <value>นามสกุล</value>
  </data>
  <data name="LINE SALESQUOTATION" xml:space="preserve">
    <value>ใบเสนอราคาการขายทางไลน์</value>
  </data>
  <data name="New Customer" xml:space="preserve">
    <value>ลูกค้าใหม่</value>
  </data>
  <data name="ORIGIN" xml:space="preserve">
    <value>ต้นทาง</value>
  </data>
  <data name="Price" xml:space="preserve">
    <value>ราคา</value>
  </data>
  <data name="REF NO" xml:space="preserve">
    <value>หมายเลขอ้างอิง</value>
  </data>
  <data name="Remark" xml:space="preserve">
    <value>ข้อสังเกต</value>
  </data>
  <data name="Remarks" xml:space="preserve">
    <value>หมายเหตุ</value>
  </data>
  <data name="SALE EMPLOYEE" xml:space="preserve">
    <value>พนักงานขาย</value>
  </data>
  <data name="SALES QUOTATION" xml:space="preserve">
    <value>ใบเสนอราคาขาย</value>
  </data>
  <data name="SERVICE TYPE" xml:space="preserve">
    <value>ประเภทบริการ</value>
  </data>
  <data name="TEL" xml:space="preserve">
    <value>โทร</value>
  </data>
  <data name="VALIDITY" xml:space="preserve">
    <value>ความถูกต้อง</value>
  </data>
  <data name="VALIDITY COUNT" xml:space="preserve">
    <value>การนับความถูกต้อง</value>
  </data>
</root>