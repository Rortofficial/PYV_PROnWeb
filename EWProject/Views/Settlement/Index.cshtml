@using Newtonsoft.Json;
@model Client.Models.Response.ListMasterSettlement
@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer localizer
@{
    var dt = DateTime.Today.ToString("yyyy-MM-dd");
}
@*@model Client.Models.Response.ListMasterPurchaseRequest*@
<title>@ViewData["Title"] - EWSystem</title>
@{
    //var a = DateTime.Today.ToString("yyyy-MM-dd");
}


<div class="card" style="border: 3px solid rgb(1 41 92);">
    <div class="card-header" style="background-color: rgb(1 41 92);color: white;">
        <div class="row">
            <div class="col-6" style="float:left;margin:auto">@localizer["Settlement"]</div>
            <div class="col-6">
                <button class="btn" id="btnCopyFromPRAdvance" @* data-bs-toggle="modal" data-bs-target="#ModalAdvancePayment"*@ style="background-color:white;color:#01295C;margin-left:10px;float:right">Select Advance Payment</button>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-12">
                <div style="margin:auto;text-align:left;font-weight:bold;"><u>@localizer["HEADER"]</u></div>
            </div>
        </div>
        <div class="row mt-4">
            <div class="col-6">
                <div class="row">
                    <div class="col-4" style="margin:auto;text-align:left;font-weight:bold;">@localizer["PR DOCNUM"]</div>
                    <div class="col-8">
                        <input type="text" class="form-control" id="txtPRDocNum" value="" readonly>
                        <input type="hidden" id="txtDocEntryPO" />
                        <input type="hidden" id="txtDocEntryPR" />
                        <input type="hidden" id="txtDocEntryAD" />
                        <input type="hidden" id="txtMaxLineNum" />
                    </div>
                </div>
            </div>
            <div class="col-6">
                @*<div class="row">
                <div class="col-4" style="margin:auto;text-align:left;font-weight:bold;">@localizer["ISSUE BY"]</div>
                <div class="col-8">
                <input type="text" class="form-control" id="txtIssueName" value="">
                </div>
                </div>*@
            </div>
        </div>
        <div class="row mt-4">
            <div class="col-6">
                <div class="row">
                    <div class="col-4" style="margin:auto;text-align:left;font-weight:bold;">@localizer["REF NO"]</div>
                    <div class="col-8">
                        <input type="text" class="form-control" id="txtRefNo" value="" readonly>
                    </div>
                </div>
            </div>
            <div class="col-6">
                <div class="row">
                    <div class="col-4" style="margin:auto;text-align:left;font-weight:bold;">@localizer["ISSUE DATE"]</div>
                    <div class="col-8">
                        <input type="text" class="form-control" disabled id="txtIssueDate" value="">
                    </div>
                </div>
            </div>
        </div>
        <div class="row mt-3">
            <div class="col-6">
                <div class="row">
                    <div class="col-4" style="margin:auto;text-align:left;font-weight:bold;">@localizer["ISSUE BY"]</div>
                    <div class="col-8">
                        <input type="text" class="form-control" id="txtCustomerCode" disabled>
                    </div>
                </div>
            </div>
            <div class="col-6">
                <div class="row">
                    <div class="col-4" style="margin:auto;text-align:left;font-weight:bold;">@localizer["Due DATE"]</div>
                    <div class="col-8">
                        <input type="text" class="form-control" disabled id="txtDueDate" value="">
                    </div>
                </div>
            </div>
        </div>
        <div class="row mt-4">
            <div class="col-6">
                <div class="row">
                    <div class="col-4" style="margin:auto;text-align:left;font-weight:bold;">
                        @localizer["Vendor Name"]
                    </div>
                    <div class="col-8">
                        <input type="text" class="form-control" disabled id="txtVendorCode" value="">
                    </div>
                </div>
            </div>
            <div class="col-6">
                <div class="row" id="jobNumPanel">
                    <div class="col-4" style="margin:auto;text-align:left;font-weight:bold;">
                        @localizer["Job No"]
                    </div>
                    <div class="col-8">
                        <input type="text" class="form-control" disabled id="txtJobNumber" value="">
                    </div>
                </div>
            </div>
        </div>
        <div class="row mt-4">
            <div class="col-6">
                <div class="row">
                    <div class="col-4" style="margin:auto;text-align:left;font-weight:bold;">
                        @localizer["Ammount Currency"]
                    </div>
                    <div class="col-8">
                        <input type="text" class="form-control" disabled id="txtAmountCurrency" value="">
                    </div>
                </div>
            </div>
            <div class="col-6">
            </div>
        </div>
        <div class="row mt-4">
            <div class="col-12">
                <div style="margin:auto;text-align:left;font-weight:bold;"><u>@localizer["LINE"]</u></div>
            </div>
        </div>
        <div class="row mt-4">
            <div class="col-12">

                <div id="showCustomerNew">
                    <div class="row">
                        <div class="col-3" style="margin:auto;">
                            @localizer["Item Code"]
                        </div>
                        <div class="col-9">
                            <select class="form-control" disabled multiple="multiple" id="txtItemPurchaseRequest">
                                @foreach (var k in Model.ListItemCodePurchaseRequest)
                                {
                                    @*<option value="@k.ItemCode" data-serviceType="@k.ServiceType">@k.ItemName</option>*@
                                    <option data-obj='@JsonConvert.SerializeObject(k)' value='@k.ItemCode'>@k.ItemName</option>
                                }
                            </select>
                            <input type="hidden" id="txtServiceType" />
                            <input type="hidden" id="txtlineNumAD" />
                            <input type="hidden" id="txtlineNumPO" />
                            <input type="hidden" id="txtlineNumPR" />
                        </div>
                    </div>
                </div>
                <div id="existingCustomer" style="display:none;">
                    <div class="row">
                        <div class="col-3" style="margin:auto;">
                            @localizer["Service"]
                        </div>
                        <div class="col-9">
                            <div class="input-group">
                                <input type="text" class="form-control" placeholder="Service Code" data-ItemCode="" id="txtServicePurchaseRequest" value="" readonly>
                                <button type="button" class="btn" style="background-color:#01295C;color:white" data-bs-toggle="modal" data-bs-target="#ModalServicePurchaseRequest">
                                    <i class="fa fa-search"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row mt-2">
            <div class="col-6">
                <div class="row">
                    <div class="col-3" style="margin:auto;">
                        @localizer["Paid"]
                    </div>
                    <div class="col-9">
                        <input type="text" disabled id="txtPaid" onchange="formartNumber('txtPaid')" class="form-control" value="">
                    </div>
                </div>
            </div>
            <div class="col-6">
                <div id="jobNumberLinePanel">
                    <div class="row">
                        <div class="col-3" style="margin:auto;">
                            @localizer["Job Number"]
                        </div>
                        <div class="col-9">
                            <select class="form-control" multiple="multiple" disabled id="txtJobItemLine">
                                @* @foreach (var k in Model.ListGetItemCodePurchaseRequest)
                                {
                                <option value="@k.ItemCode" data-serviceType="@k.ServiceType">@k.ItemName</option>
                                }*@
                            </select>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div id="projectManagment">
            <div class="row mt-2">

                <div class="col-6 mt-2">
                    <div class="row">
                        <div class="col-3" style="margin:auto;">
                            @localizer["Customer Name"]
                        </div>
                        <div class="col-9">
                            <select class="form-control" disabled multiple="multiple" id="txtCustomerCodeLine">
                                @* @foreach (var k in Model.ListGetItemCodePurchaseRequest)
                                {
                                <option value="@k.ItemCode" data-serviceType="@k.ServiceType">@k.ItemName</option>
                                }*@
                            </select>

                        </div>
                    </div>
                </div>
                <div class="col-6 mt-2">
                    <div class="row">
                        <div class="col-3" style="margin:auto;">
                            @localizer["Ref Inv"]
                        </div>
                        <div class="col-9">
                            <select class="form-control" disabled multiple="multiple" id="txtRefInv">
                                @* @foreach (var k in Model.ListGetItemCodePurchaseRequest)
                                {
                                <option value="@k.ItemCode" data-serviceType="@k.ServiceType">@k.ItemName</option>
                                }*@
                            </select>

                        </div>
                    </div>
                </div>

                <div class="col-6 mt-2">
                    <div class="row">
                        <div class="col-3" style="margin:auto;">
                            @localizer["Declaration No"]
                        </div>
                        <div class="col-9">
                            <input type="text" class="form-control" disabled id="txtTransportationNo" value="">
                        </div>
                    </div>
                </div>
                <div class="col-6 mt-2">
                    <div class="row">
                        <div class="col-3" style="margin:auto;">
                            @localizer["Remarks"]
                        </div>
                        <div class="col-9">
                            <textarea class="form-control" disabled id="txtRemarksLine"></textarea>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row mt-4">
            <div class="col-6">
            </div>
            <div class="col-6">
                <button class="btn" id="btnAddLineInfo" style="float:right;background-color:#01295C;color:white">Add Line</button>
            </div>
        </div>

        <div class="table-line">
            <div id="itemType">
                <div class="row mt-5">
                    <div class="col-12">
                        <table id="TbListLineItemPurchaseRequest" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0" style="background: #f0eff1; color: #696969;">
                            <thead>
                                <tr>
                                    <th>Description</th>
                                    <th>Service Type</th>
                                    <th>Paid</th>
                                    @*<th>Cash On Hand</th>*@
                                    <th>Job Number</th>
                                    <th>Customer Name</th>
                                    <th>Ref Invoice</th>
                                    <th>Transportation No</th>
                                    <th>Remarks</th>
                                    <th>Delete</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <div class="row mt-4">
            <div class="col-6">
            </div>
            <div class="col-6">
                <div class="row">
                    <div class="col-3" style="margin:auto;text-align:left;font-weight:bold;">
                        @localizer["Cash On Hand"]
                    </div>
                    <div class="col-9">
                        <input type="text" class="form-control"  onchange="formartNumber('txtGrandTotalCashOnHand')" id="txtGrandTotalCashOnHand" readonly>
                    </div>
                </div>
            </div>
        </div>
        <div class="row mt-4">
            <div class="col-6">
            </div>
            <div class="col-6">
                <div class="row">
                    <div class="col-3" style="margin:auto;text-align:left;font-weight:bold;">
                        @localizer["Total Paid"]
                    </div>
                    <div class="col-9">
                        <input type="text" class="form-control" onchange="formartNumber('txtTotalPaid')" id="txtTotalPaid" readonly>
                    </div>
                </div>
            </div>
        </div>
        <div class="row mt-4">
            <div class="col-6">
            </div>
            <div class="col-6">
                <div class="row">
                    <div class="col-3" style="margin:auto;text-align:left;font-weight:bold;">
                        @localizer["Grand Total"]
                    </div>
                    <div class="col-9">
                        <input type="text" class="form-control" onchange="formartNumber('txtGrandTotal')" id="txtGrandTotal" readonly>
                    </div>
                </div>
            </div>
        </div>
        <div class="row mt-4">
            <div class="col-6">
            </div>
            <div class="col-6">
                @*<div class="row">
                    <div class="col-3" style="margin:auto;text-align:left;font-weight:bold;">@localizer["Grand Total THB"]</div>
                    <div class="col-9">
                        <input type="text" class="form-control" onchange="formartNumber('txtAmountTHB')" id="txtAmountTHB" disabled>
                    </div>
                </div>*@
            </div>
        </div>
        <div class="row mt-4">
            <div class="col-6">
                <div class="row">
                    <div class="col-3" style="margin:auto;text-align:left;font-weight:bold;">
                        @localizer["Bank Account"]
                    </div>
                    <div class="col-9">
                        <input type="text" class="form-control" id="txtBankAccount" disabled>
                    </div>
                </div>
            </div>
            <div class="col-6">
                <div class="row">
                    <div class="col-3" style="margin:auto;text-align:left;font-weight:bold;">@localizer["Branch"]</div>
                    <div class="col-9">
                        <input type="text" class="form-control" id="txtBranch" disabled>
                    </div>
                </div>
            </div>
        </div>
        <div class="row mt-4">
            <div class="col-6">
                <div class="row">
                    <div class="col-3" style="margin:auto;text-align:left;font-weight:bold;">@localizer["Country"]</div>
                    <div class="col-9">
                        <input type="text" class="form-control" id="txtCountry" disabled>
                    </div>
                </div>
            </div>
            <div class="col-6">
            </div>
        </div>
        <div class="row mt-4">
            <div class="col-6">
                <div class="row">
                    <div class="col-3" style="margin:auto;text-align:left;font-weight:bold;">
                        @localizer["Bank Name"]
                    </div>
                    <div class="col-9">
                        <input type="text" class="form-control" id="txtBankName" disabled>
                    </div>
                </div>
            </div>
            <div class="col-6">
                <div class="row">
                    <div class="col-3" style="margin:auto;text-align:left;font-weight:bold;">@localizer["Swift Code"]</div>
                    <div class="col-9">
                        <input type="text" class="form-control" id="txtSwiftCode" disabled>
                    </div>
                </div>
            </div>
        </div>
        <div class="row mt-2">
            <div class="col-6">
                <div style="margin:auto;text-align:left;font-weight:bold;"><u>@localizer["Remark"]</u></div>
            </div>
            <div class="col-6">
            </div>
        </div>
        <div class="row mt-2">
            <div class="col-12">
                <textarea id="remarks" disabled rows="4" class="form-control"></textarea>
            </div>
        </div>
    </div>
    <div class="card-footer">
        <div class="row mt-3">
            <div class="col-9">
            </div>
            <div class="col-3">
                <select class="form-select" style="float:right;background-color:#01295C;color:white;" id="cboConfrimTransaction">
                    <option selected value="-1">Select Document Type</option>
                    <option value="1">Send To SAP</option>
                    <option value="2">Add Document Draft</option>
                </select>
                @*<button class="btn" id="btnConfirmTransaction"
                onclick=""
                style="float:right;background-color:#01295C;color:white;margin-left:10px;">
                Confirm Transaction
                </button>*@
            </div>
        </div>
    </div>
</div>
@await Html.PartialAsync("Modal/ModalSelectAdvancePayment"/*, Model.GetCOs*/)
@section scripts{
    <script defer>
        var itemLinePR = [];
        var countItemLine = 1;
        var itemavailable = [];
        //var customeravailable = @Html.Raw(@Json.Serialize(Model.ListCustomerJobSheetTrucking));

        $("#txtItemPurchaseRequest").select2({
            placeholder: "Select a ItemCode",
            maximumSelectionLength: 1
        });
        $("#txtJobItemLine").select2({
            placeholder: "Select a Job Number",
            maximumSelectionLength: 1
        });
        $("#txtRefInv").select2({
            placeholder: "Select a Invoice Number",
            maximumSelectionLength: 1
        });
        $("#txtCustomerCodeLine").select2({
            placeholder: "Select a Customer",
            maximumSelectionLength: 1
        });
        $('#projectManagment').attr('style', "display:none;");
        $('#jobNumberLinePanel').attr('style', "display:none;");
        $('#TbListAdvancePayment').DataTable(
            {
                columns:
                    [
                        { data: "row", autoWidth: true },
                        {
                            render: function (data, type, full, meta) {
                                return '<button class="btn-sm btn-success" style="margin: auto;" onClick="OnSelectAdvance(' + full.docEntry + ')"><i class="fas fa-check-circle"></i></button>';
                            }
                        },
                        { data: "docNum", autoWidth: true },
                        { data: "refNo", autoWidth: true },
                        { data: "jobNumber", autoWidth: true },
                        { data: "vendorCode", autoWidth: true },
                        { data: "vendorName", autoWidth: true },
                        { data: "issueDate", autoWidth: true },
                        { data: "docTotal", autoWidth: true },
                        { data: "remarks", autoWidth: true }
                    ],
            }
        );
        var tbAdvanceList = $('#TbListAdvancePayment').DataTable();
        $("#txtItemPurchaseRequest").change(function () {
            if ($("#txtItemPurchaseRequest").val()[0] !== undefined) {
                var obj = JSON.parse($("#txtItemPurchaseRequest option:selected").attr("data-obj"));
                $("#txtCashOnHand").val(obj.amount);
                //$("#txtRemarksLine").val(obj.remark);
                $("#txtServiceType").val(obj.serviceType);
                $("#txtlineNumAD").val(obj.lineNumAD);
                $("#txtlineNumPO").val(obj.lineNumPO);
                $("#txtlineNumPR").val(obj.LineNumPR);
                $("#txtPaid").removeAttr("disabled");
                $("#txtJobItemLine").removeAttr("disabled");
                $("#txtRemarksLine").removeAttr("disabled");
                $("#txtCustomerCodeLine").removeAttr("disabled");
                $("#txtRefInv").removeAttr("disabled");
                $("#txtTransportationNo").removeAttr("disabled");
            } else {
                $("#txtRemarksLine").val("");
                $("#txtPaid").val(0);
                $("#txtCashOnHand").val(0);
                $("#txtlineNumAD").val("");
                $("#txtlineNumPO").val("");
                $("#txtlineNumPR").val("");
                if ($("#txtItemPurchaseRequest").val()[0] !== undefined) {
                    $("#txtItemPurchaseRequest").val([]).trigger("change");
                }
                if ($("#txtJobItemLine").val()[0] !== undefined) {
                    $("#txtJobItemLine").val([]).trigger("change");
                }
                //$("#txtJobItemLine").val([]).trigger("change");
                $("#txtPaid").attr("disabled", "disabled");
                $("#txtJobItemLine").attr("disabled", "disabled");
                $("#txtRemarksLine").attr("disabled", "disabled");
                $("#txtCustomerCodeLine").attr("disabled", "disabled");
                $("#txtRefInv").attr("disabled", "disabled");
                $("#txtTransportationNo").attr("disabled", "disabled");
            }
        });
        $("#txtCustomerCodeLine").change(function () {
            if ($("#txtCustomerCodeLine").val()[0] !== undefined) {
                //alert("Heello");
                var jobNum = ($("#txtJobItemLine").val()[0] === undefined) ? $("#txtJobNumber").val() : $("#txtJobItemLine").val()[0];
                $.ajax({
                    url: '@Url.Action("GetListRefInvByJobSheetResponse","Settlement")',
                    type: "GET",
                    data: {
                        cardCode: $("#txtCustomerCodeLine").val()[0],
                        JobNumber: jobNum,
                    },
                    dataType: "JSON",
                    beforeSend: function () {
                        $('#Modalloder').modal('show');
                    },
                    success: function (data) {
                        $('#Modalloder').modal('hide');
                        $("#txtRefInv").empty().trigger("change");
                        for (var i = 0; i < data.data.length; i++) {
                            $('#txtRefInv').append("<option value='" + data.data[i].docEntry + "'>" + data.data[i].docNum + "</option>");
                        }
                    },
                    error: function (erro) {
                        $('#Modalloder').modal('hide');
                        $('#ModalSuccess').modal('show');
                        $('#ErrMsg').html(erro.responseText);
                    }
                });
            } else {
                $("#txtRefInv").empty().trigger("change");
            }
        });
        $("#txtJobItemLine").change(function () {
            if ($("#txtJobItemLine").val()[0] !== undefined) {
                $.ajax({
                    url: '@Url.Action("GetListCustomerJobSheetTruckingResponse","Settlement")',
                    type: "GET",
                    data: {
                        JobNumber: $("#txtJobItemLine").val()[0],
                    },
                    dataType: "JSON",
                    beforeSend: function () {
                        $('#Modalloder').modal('show');
                    },
                    success: function (data) {
                        $('#Modalloder').modal('hide');
                        $("#txtCustomerCodeLine").empty().trigger("change");
                        for (var i = 0; i < data.data.length; i++) {
                            $('#txtCustomerCodeLine').append("<option value='" + data.data[i].cardCode + "'>" + data.data[i].cardCode + ' - ' + data.data[i].cardName + "</option>");
                        }
                    },
                    error: function (erro) {
                        $('#Modalloder').modal('hide');
                        $('#ModalSuccess').modal('show');
                        $('#ErrMsg').html(erro.responseText);
                    }
                });
            } else {
                if ($("#txtJobNumber").val() === '') {
                    $("#txtCustomerCodeLine").empty().trigger("change");
                }
            }
        });
        $('#TbListLineItemPurchaseRequest').DataTable({
            columns:
                [
                    { data: "ItemName", autoWidth: true },
                    { data: "ServiceType", autoWidth: true },
                    //{ data: "Origin", autoWidth: true },
                    //{ data: "Destination", autoWidth: true },
                    { data: "Paid", autoWidth: true },
                    //{ data: "Amount", autoWidth: true },
                    { data: "JobNumber", autoWidth: true },
                    { data: "CustomerName", autoWidth: true },
                    { data: "InvNumber", autoWidth: true },
                    { data: "DeclarationNo", autoWidth: true },
                    { data: "RemarkOrRisk", autoWidth: true },
                    {
                        render: function (data, type, full, meta) {
                            return '<button class="btn-sm btn-danger" style="margin-left: 40%;" onClick="DeleteLineItem(' + full.ID + ')"><i class="fas fa-trash-alt"></i></button>';
                        }
                    }
                ],
        });
        function onConfirmTransaction(url, urlPDF) {
            if (confirm("Please confirm transaction make the data is correct !")) {
                var purchaseRequest = {};
                purchaseRequest.DocEntryPO = $("#txtDocEntryPO").val();
                purchaseRequest.DocEntryAD = $("#txtDocEntryAD").val();
                purchaseRequest.DocEntryPR = $("#txtDocEntryPR").val();
                purchaseRequest.Lines = itemLinePR;
                $.ajax({
                    url: url,
                    type: "POST",
                    data: {
                        updatePurchaseRequest: purchaseRequest
                    },
                    dataType: "JSON",
                    beforeSend: function () {
                        $('#Modalloder').modal('show');
                    },
                    success: function (data) {
                        $('#Modalloder').modal('hide');
                        $('#ModalSuccess').modal('show');
                        $('#ErrMsg').html("Success");
                        window.location.href = urlPDF + "?docEntry=" + data.docEntry;
                    },
                    error: function (erro) {
                        $('#Modalloder').modal('hide');
                        $('#ModalSuccess').modal('show');
                        $('#ErrMsg').html(erro.responseText);
                    }
                });
            }
            $("#cboConfrimTransaction").val('-1');
        }
        $("#btnAddLineInfo").click(function () {
            if ($("#txtPaid").val() <= 0) {
                alert("Input Amount Paid first!")
                return;
            }
            //else if (parseFloat($("#txtGrandTotalCashOnHand").val()) < (parseFloat($("#txtPaid").val()) + parseFloat($("#txtTotalPaid").val()))) {
            //    alert("Amount Paid Cannot Bigger then Cash On hand!")
            //    return;
            //}
            else if ($("#txtJobNumber").val() === '') {
                if ($("#txtJobItemLine").val()[0] === undefined) {
                    alert("Select Job Number Before Add!")
                    return;
                }
            }
            var objItemLine = {};
            objItemLine.ID = countItemLine;
            objItemLine.ItemCode = $("#txtItemPurchaseRequest").val()[0];
            objItemLine.ItemName = $("#txtItemPurchaseRequest option:selected").text();
            objItemLine.ServiceType = $("#txtServiceType").val();
            objItemLine.Paid = $("#txtPaid").val();
            objItemLine.RemarkOrRisk = $("#txtRemarksLine").val();
            objItemLine.LineNumAD = $("#txtlineNumAD").val();
            objItemLine.LineNumPO = $("#txtlineNumPO").val();
            objItemLine.LineNumPR = $("#txtlineNumPR").val();
            objItemLine.JobNumber = ($("#txtJobItemLine").val()[0] === undefined) ? $("#txtJobNumber").val() : $("#txtJobItemLine").val()[0];
            objItemLine.CustomerCode = ($("#txtCustomerCodeLine").val()[0] === undefined) ? '' : $("#txtCustomerCodeLine").val()[0];
            objItemLine.CustomerName = $("#txtCustomerCodeLine option:selected").text();
            objItemLine.InvNumber = ($("#txtRefInv").val()[0] === undefined) ? '' : $("#txtRefInv").val()[0];
            objItemLine.DeclarationNo = $("#txtTransportationNo").val();
            itemLinePR.push(objItemLine);
            countItemLine++;
            //if (($("#txtCashOnHand").val() - $("#txtPaid").val()) == 0) {
            //    reRenderDataTableLine($("#txtItemPurchaseRequest").val()[0], '');
            //} else {
            //    reRenderDataTableLine('', $("#txtItemPurchaseRequest").val()[0]);
            //}
            reRenderDataTableLine('', $("#txtItemPurchaseRequest").val()[0]);
            $("#txtRemarksLine").val("");
            $("#txtPaid").val(0);
            $("#txtCashOnHand").val(0);
            $("#txtlineNumAD").val("");
            $("#txtlineNumPO").val("");
            $("#txtlineNumPR").val("");
            $("#txtTransportationNo").val("");
            if ($("#txtJobNumber").val() == '') {
                $("#txtCustomerCodeLine").empty().trigger("change");
            }
            $("#txtRefInv").empty().trigger("change");
            $("#txtItemPurchaseRequest").val([]).trigger("change");
            $("#txtJobItemLine").val([]).trigger("change");
            $("#txtCustomerCodeLine").val([]).trigger("change");
            $("#txtRefInv").empty().trigger("change");
            $("#txtPaid").attr("disabled", "disabled");
            $("#txtJobItemLine").attr("disabled", "disabled");
            $("#txtRemarksLine").attr("disabled", "disabled");
            $("#txtCustomerCodeLine").attr("disabled", "disabled");
            $("#txtRefInv").attr("disabled", "disabled");
            $("#txtTransportationNo").attr("disabled", "disabled");
        });
        $("#btnCopyFromPRAdvance").click(function () {
            $.ajax({
                url: '@Url.Action("GetListAdvancePaymentClearing","Settlement")',
                type: "GET",
                //data: {
                //    postPurchaseRequestRequest: purchaseRequest,
                //    typePurchaseRequest: "PRAD",
                //},
                dataType: "JSON",
                beforeSend: function () {
                    $('#Modalloder').modal('show');
                },
                success: function (data) {
                    $('#Modalloder').modal('hide');
                    tbAdvanceList.clear();
                    tbAdvanceList.rows.add(data.data);
                    tbAdvanceList.search("").columns().search("").draw();
                    $("#ModalAdvancePayment").modal("show");
                },
                error: function (erro) {
                    $('#Modalloder').modal('hide');
                    $('#ModalSuccess').modal('show');
                    $('#ErrMsg').html(erro.responseText);
                }
            });
        });
        function OnSelectAdvance(docEntry) {
            itemLinePR = [];
            itemavailable = [];
            countItemLine = 1;
            var tbListItemLine = $('#TbListLineItemPurchaseRequest').DataTable();
            tbListItemLine.clear();
            tbListItemLine.rows.add([]);
            tbListItemLine.search("").columns().search("").draw();
            $("#txtGrandTotalCashOnHand").val(0);
            $("#txtTotalPaid").val(0);
            $("#txtGrandTotal").val(0);
            $("#txtRemarksLine").val("");
            $("#txtPaid").val(0);
            $("#txtCashOnHand").val(0);
            $("#txtlineNumAD").val("");
            $("#txtlineNumPO").val("");
            $("#txtlineNumPR").val("");
            $("#txtTransportationNo").val("");
            $("#txtCustomerCodeLine").empty().trigger("change");
            $("#txtJobItemLine").empty().trigger("change");
            $("#txtRefInv").empty().trigger("change");
            $("#txtItemPurchaseRequest").val([]).trigger("change");
            $("#txtRefInv").empty().trigger("change");
            $("#txtPaid").attr("disabled", "disabled");
            $("#txtJobItemLine").attr("disabled", "disabled");
            $("#txtRemarksLine").attr("disabled", "disabled");
            $("#txtCustomerCodeLine").attr("disabled", "disabled");
            $("#txtRefInv").attr("disabled", "disabled");
            $("#txtTransportationNo").attr("disabled", "disabled");
            $.ajax({
                url: '@Url.Action("GetListAdvancePaymentClearingByDocEntry","Settlement")',
                type: "GET",
                data: {
                    docEntry: docEntry
                },
                dataType: "JSON",
                beforeSend: function () {
                    $('#Modalloder').modal('show');
                },
                success: function (data) {
                    $('#Modalloder').modal('hide');
                    $('#ModalAdvancePayment').modal('hide');
                    $("#txtPRDocNum").val(data.data.prDocNum);
                    $("#txtRefNo").val(data.data.refNo);
                    $("#txtIssueDate").val(data.data.issueDate);
                    $("#txtCustomerCode").val(data.data.vendorCode);
                    $("#txtDueDate").val(data.data.dueDate);
                    $("#txtVendorCode").val(data.data.vendorName);
                    $("#txtGrandTotalCashOnHand").val(data.data.grandTotal);
                    formartNumber('txtGrandTotalCashOnHand');
                    $("#txtMaxLineNum").val(data.data.maxLineNum);
                    if (data.data.jobNo !== '') {
                        $("#txtJobNumber").val(data.data.jobNo);
                        $('#jobNumberLinePanel').attr('style', "display:none;");
                        $('#jobNumPanel').attr('style', "");
                        $('#projectManagment').attr('style', "");
                        $.ajax({
                            url: '@Url.Action("GetListCustomerJobSheetTruckingResponse","Settlement")',
                            type: "GET",
                            data: {
                                JobNumber: $("#txtJobNumber").val(),
                            },
                            dataType: "JSON",
                            beforeSend: function () {
                                $('#Modalloder').modal('show');
                            },
                            success: function (data) {
                                $('#Modalloder').modal('hide');
                                $("#txtCustomerCodeLine").empty().trigger("change");
                                for (var i = 0; i < data.data.length; i++) {
                                    $('#txtCustomerCodeLine').append("<option value='" + data.data[i].cardCode + "'>" + data.data[i].cardCode + ' - ' + data.data[i].cardName + "</option>");
                                }
                            },
                            error: function (erro) {
                                $('#Modalloder').modal('hide');
                                $('#ModalSuccess').modal('show');
                                $('#ErrMsg').html(erro.responseText);
                            }
                        });
                    } else {
                        $('#jobNumberLinePanel').attr('style', "");
                        $('#projectManagment').attr('style', "");
                        $('#jobNumPanel').attr('style', "display:none;");
                        $.ajax({
                            url: '@Url.Action("GetProjectManagementList","Settlement")',
                            type: "GET",
                            dataType: "JSON",
                            beforeSend: function () {
                                $('#Modalloder').modal('show');
                            },
                            success: function (data) {
                                $('#Modalloder').modal('hide');
                                $("#txtJobItemLine").empty().trigger("change");
                                for (var i = 0; i < data.data.length; i++) {
                                    $('#txtJobItemLine').append("<option value='" + data.data[i].projectCode + "'>" + data.data[i].projectName + "</option>");
                                }
                            },
                            error: function (erro) {
                                $('#Modalloder').modal('hide');
                                $('#ModalSuccess').modal('show');
                                $('#ErrMsg').html(erro.responseText);
                            }
                        });
                    }
                    $("#txtAmountCurrency").val(data.data.amountCurrency);
                    $("#remarks").val(data.data.remarks);
                    $("#txtDocEntryPO").val(data.data.prDocEntry);
                    $("#txtDocEntryAD").val(data.data.docEntry);
                    $("#txtDocEntryPR").val(data.data.docEntryPurchaseRequest);
                    //itemavailable = JSON.parse('@Json.Serialize(Model.ListItemCodePurchaseRequest)');//data.data.lines;
                    //for (var i = 0; i < itemavailable.length; i++) {
                    //    $('#txtItemPurchaseRequest').append("<option data-obj='" + JSON.stringify(itemavailable[i]) + "' value='" + itemavailable[i].itemCode + "'>" + itemavailable[i].itemName + "</option>");
                    //}
                    $('#txtItemPurchaseRequest').removeAttr("disabled");
                },
                error: function (erro) {
                    $('#Modalloder').modal('hide');
                    $('#ModalSuccess').modal('show');
                    $('#ErrMsg').html(erro.responseText);
                }
            });
        }
        function reRenderDataTableLine(itemCode, itemAddLine) {
            //if (itemCode != '') {
            //    itemavailable = itemavailable.filter(e => e.itemCode !== itemCode);
            //    $("#txtItemPurchaseRequest").empty().trigger("change");
            //    for (var i = 0; i < itemavailable.length; i++) {
            //        $('#txtItemPurchaseRequest').append("<option data-obj='" + JSON.stringify(itemavailable[i]) + "' value='" + itemavailable[i].itemCode + "'>" + itemavailable[i].itemName + "</option>");
            //    }
            //} else {
            //    var itemAdd = itemavailable.filter(e => e.itemCode === itemAddLine);
            //    console.log(itemAdd);
            //    itemavailable = itemavailable.filter(e => e.itemCode !== itemAddLine);
            //    console.log(itemavailable);
            //    itemavailable.push({
            //        "itemCode": itemAdd[0].itemCode,
            //        "itemName": itemAdd[0].itemName,
            //        "amount": ($("#txtCashOnHand").val() - $("#txtPaid").val()),
            //        "remark": itemAdd[0].remark,
            //        "serviceType": itemAdd[0].serviceType,
            //        "lineNumAD": itemAdd[0].lineNumAD,
            //        "lineNumPO": itemAdd[0].lineNumPO,
            //        "destination": '',
            //        "origin": '',
            //        "id": 0,
            //    });
            //    console.log(itemavailable);

            //    $("#txtItemPurchaseRequest").empty().trigger("change");
            //    for (var i = 0; i < itemavailable.length; i++) {
            //        $('#txtItemPurchaseRequest').append("<option data-obj='" + JSON.stringify(itemavailable[i]) + "' value='" + itemavailable[i].itemCode + "'>" + itemavailable[i].itemName + "</option>");
            //    }
            //}
            var tbListItemLine = $('#TbListLineItemPurchaseRequest').DataTable();
            tbListItemLine.clear();
            tbListItemLine.rows.add(itemLinePR);
            tbListItemLine.search("").columns().search("").draw();
            CalculateExchangeRate();
        }
        function DeleteLineItem(id) {
            objDelete = itemLinePR.filter(e => e.ID === id);
            itemLinePR = itemLinePR.filter(e => e.ID !== id);
            itemavailable.push({
                "itemCode": objDelete[0].ItemCode,
                "itemName": objDelete[0].ItemName,
                "amount": objDelete[0].Amount,
                "remark": objDelete[0].Remark,
                "serviceType": objDelete[0].ServiceType,
                "lineNumAD": objDelete[0].LineNumAD,
                "lineNumPO": objDelete[0].LineNumPO,
                "lineNumPR": objDelete[0].LineNumPR,
                "destination": '',
                "origin": '',
                "id": 0,
            });
            //console.log(itemavailable);
            //$("#txtItemPurchaseRequest").empty().trigger("change");
            //for (var i = 0; i < itemavailable.length; i++) {
            //    $('#txtItemPurchaseRequest').append("<option data-obj='" + JSON.stringify(itemavailable[i]) + "' value='" + itemavailable[i].itemCode + "'>" + itemavailable[i].itemName + "</option>");
            //}
            reRenderDataTableLine();
            CalculateExchangeRate();
        }
        function CalculateExchangeRate() {
            var obj = itemLinePR
            var totalUSD = 0;
            var totalPaid = 0;
            for (var i = 0; i < obj.length; i++) {
                //totalUSD += parseFloat(obj[i].Amount.replace(",", ""));
                totalPaid += parseFloat(obj[i].Paid.replace(",", ""));
            }
            var totalthb = $("#cboAmountCurrency option:selected").attr("data-exchangeBase");
            //$("#txtAmountTHB").val(totalUSD * totalthb);
            //$("#txtGrandTotalCashOnHand").val(totalUSD);
            $("#txtTotalPaid").val(totalPaid);
            $("#txtGrandTotal").val(parseFloat($("#txtGrandTotalCashOnHand").val().replace(",", "")) - totalPaid);
            formartNumber('txtTotalPaid');
            formartNumber('txtGrandTotal');
        }
        $("#cboConfrimTransaction").change(function () {
            var a = $("#cboConfrimTransaction").val();
            if (a == "1") {
                onConfirmTransaction('@Url.Action("PutPurchaseRequest","Settlement")', '@Url.Action("ViewDetailPurchaseOrder","Settlement")');
            }
            else if (a == "2") {
                onAddSettlementDocumentDraft('@Url.Action("PostSettlementDraftDocument","Settlement")', '@Url.Action("ViewDetailPurchaseOrder","Settlement")');
            }
        });
        function onAddSettlementDocumentDraft(url, urlPDF) {
            if (confirm("Please confirm transaction make the data is correct !")) {
                var addSettlementDraft = {};
                addSettlementDraft.RefNo = $("#txtRefNo").val();
                addSettlementDraft.DocEntry = $("#txtDocEntryPO").val();
                addSettlementDraft.TotalPaid = $("#txtTotalPaid").val().replace(",", "");
                addSettlementDraft.GrandTotal = $("#txtGrandTotal").val().replace(",", "");
                for (var i = 0; i < itemLinePR.length; i++) {
                    itemLinePR[i].Paid = itemLinePR[i].Paid.replace(",", "");
                }
                addSettlementDraft.Lines = itemLinePR;
                $.ajax({
                    url: url,
                    type: "POST",
                    data: {
                        addSettlementDraftRequest: addSettlementDraft
                    },
                    dataType: "JSON",
                    beforeSend: function () {
                        $('#Modalloder').modal('show');
                    },
                    success: function (data) {
                        $('#Modalloder').modal('hide');
                        $('#ModalSuccess').modal('show');
                        $('#ErrMsg').html("Success");
                        window.location.href = urlPDF + "?docEntry=" + data.docEntry + "&type=draft";
                    },
                    error: function (erro) {
                        $('#Modalloder').modal('hide');
                        $('#ModalSuccess').modal('show');
                        $('#ErrMsg').html(erro.responseText);
                    }
                });
            }
            $("#cboConfrimTransaction").val('-1');
        }
    </script>
}